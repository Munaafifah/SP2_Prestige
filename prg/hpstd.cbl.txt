 IDENTIFICATION DIVISION.
        PROGRAM-ID. HPSTD.

      * HELP TABLE STUDENT FILE
      * AUTHOR     DATE     TYPE   A/C    NOTES
      * MUNA    03/10/2025   -      PA     SP1
      * MUNA    13/10/2025   -      PA     SP2

       ENVIRONMENT DIVISION.
        INPUT-OUTPUT SECTION.
         FILE-CONTROL.
           COPY '/z/y25b31/sp2/lib/fd/fcstd'.
           COPY '/z/y25b31/sp2/lib/fd/fccy'.
           COPY '/z/y25b31/sp2/lib/fd/fcrc'.
           COPY '/z/y25b31/sp2/lib/fd/fcrg'.

       DATA DIVISION.
        FILE SECTION.
           COPY '/z/y25b31/sp2/lib/fd/fdstd'.
           COPY '/z/y25b31/sp2/lib/fd/fdcy'.
           COPY '/z/y25b31/sp2/lib/fd/fdrc'.
           COPY '/z/y25b31/sp2/lib/fd/fdrg'.

        WORKING-STORAGE SECTION.
           COPY '/z/y25b31/sp2/lib/fd/dbstd'.
           COPY '/z/y25b31/sp2/lib/fd/dbcy'.
           COPY '/z/y25b31/sp2/lib/fd/dbrc'.
           COPY '/z/y25b31/sp2/lib/fd/dbrg'.
           COPY '/v/cps/lib/std/stdvar.def'.
           COPY '/v/cps/lib/std/fkey.def'.

        78 T-SIZE               VALUE 10.

        01 WS-REC.
           03 WS-STD-KEY       PIC X(06).
           03 WS-STD-NAME      PIC X(40).
           03 WS-STD-GENDER    PIC X(06).
           03 WS-STD-CY-KEY    PIC X(02).
           03 WS-STD-RC-KEY    PIC X(02).
           03 WS-STD-RG-KEY    PIC X(02).
           03 WS-STD-RG-NAME   PIC X(20).
           03 WS-STD-ADD1      PIC X(50).
           03 WS-STD-ADD2      PIC X(50).
           03 WS-STD-ADD3      PIC X(50).
           03 WS-STD-DOB-DMY   PIC 9(08).
           03 WS-STD-AGE       PIC 9(02).
           03 WS-STD-HEIGHT    PIC 999V99.
           03 WS-STD-WEIGHT    PIC 999V99.
           03 WS-STD-CY-NAME   PIC X(20).
           03 WS-STD-RC-NAME   PIC X(20).
           03 WS-STD-EMAIL     PIC X(50).
           03 WS-STD-MOBILE    PIC X(30).

        01 WS-TEMP.
           03 WS-T-STD-KEY      PIC X(06).

        LINKAGE SECTION.
        01 LINK-STD-KEY        PIC X(06).
        01 LINK-OK             PIC X(01).

        SCREEN SECTION.
        01 MAIN-SCR.
           03 LABEL LINE 02 COL 4.5 'AC#'.
           03 LABEL COL 12.5 'Name'.
           03 LABEL COL 58.5 'Gender'.
           03 LABEL COL 68.5 'Country'.
           03 LABEL COL 78.5 'Race'.
           03 LABEL COL 88.5 'Religion'.
           03 LABEL LINE 9.5 COL 4 'Address:'.
           03 LABEL LINE + 3 COL 4 'DOB:'.
           03 LABEL LINE + 1 COL 04 'Age: '.
           03 LABEL LINE + 1 COL 4 'Height:'.
           03 LABEL LINE + 1 COL 4 'Weight:'.
           03 LABEL LINE + 1 COL 4 'Country Name:'.
           03 LABEL LINE + 1 COL 4 'Race Name:'.
           03 LABEL LINE + 1 COL 4 'Religion Name:'.
           03 LABEL LINE + 1 COL 4 'Email#:'.
           03 LABEL LINE + 1 COL 4 'Mobile#:'.
           03 LIST-1 LIST-BOX USING WS-REC PAGED 3-D NOTIFY-SELCHANGE
              LINE 03 COL 04 SIZE 95 CELL LINES T-SIZE
              DATA-COLUMNS    = (1, 7, 47, 53, 55, 57, 59, 61)
              DISPLAY-COLUMNS = (1, 9, 55, 65, 75, 85)
              DIVIDERS        = (1, 1, 1, 1, 1)
              ALIGNMENT       = ('L', 'L', 'L', 'L', 'L', 'L')
              SORT-ORDER      = (2)
              EXCEPTION PROCEDURE LIST-1-RTN THRU LIST-1-END
              EXCEPTION-VALUE W-DBLCLICK.

           03 ENTRY-FIELD 3-D LINE 9.5 COL 18 PIC X(40) FROM
                    WS-STD-ADD1.
           03 ENTRY-FIELD 3-D LINE + 1 COL 18 PIC X(40) FROM
                    WS-STD-ADD2.
           03 ENTRY-FIELD 3-D LINE + 1 COL 18 PIC X(40) FROM
                    WS-STD-ADD3.
           03 ENTRY-FIELD 3-D LINE + 1 COL 18 PIC 99/99/9999 FROM
                    WS-STD-DOB-DMY.
           03 ENTRY-FIELD 3-D LINE + 1 COL 18 PIC 99 FROM
                    WS-STD-AGE.
           03 ENTRY-FIELD 3-D LINE + 1 COL 18 PIC ZZZ.99 FROM
                    WS-STD-HEIGHT.
           03 ENTRY-FIELD 3-D LINE + 1 COL 18 PIC ZZZ.99 FROM
                    WS-STD-WEIGHT.
           03 ENTRY-FIELD 3-D LINE + 1 COL 18 PIC X(20) FROM
                    WS-STD-CY-NAME.
           03 ENTRY-FIELD 3-D LINE + 1 COL 18 PIC X(20) FROM
                    WS-STD-RC-NAME.
           03 ENTRY-FIELD 3-D LINE + 1 COL 18 PIC X(20) FROM
                    WS-STD-RG-NAME.
           03 ENTRY-FIELD 3-D LINE + 1 COL 18 PIC X(50) FROM
                    WS-STD-EMAIL.
           03 ENTRY-FIELD 3-D LINE + 1 COL 18 PIC X(30) FROM
           WS-STD-MOBILE.

           03 PUSH-BUTTON 'Select'
              LINE 21.8 COL 35 SIZE 15 LINES 1.2
              TERMINATION-VALUE 13.
           03 PUSH-BUTTON 'Exit'
              COL + 3 SIZE 15 LINES 1.2
              TERMINATION-VALUE 27.

      *****************************************************************
       PROCEDURE DIVISION USING LINK-STD-KEY, LINK-OK.

        DECLARATIVES.

           COPY '/z/y25b31/sp2/lib/fd/dcstd'.
           COPY '/z/y25b31/sp2/lib/fd/dccy'.
           COPY '/z/y25b31/sp2/lib/fd/dcrc'.
           COPY '/z/y25b31/sp2/lib/fd/dcrg'.

        END DECLARATIVES.

      *****************************************************************
        MAIN-LOGIC.

           MOVE 'N' TO S-RUN.
           OPEN INPUT STD-FILE, CY-FILE, RC-FILE, RG-FILE.

           MOVE 'Y'             TO S-RUN.
           MOVE 'Student Table' TO S-WINDOW-TITLE.
           DISPLAY FLOATING WINDOW
           LINES 22 SIZE 100 CELL SIZE = ENTRY-FIELD FONT
           SEPARATE
           NO SCROLL NO WRAP
           TITLE S-WINDOW-TITLE
           POP-UP S-WINDOW.
           DISPLAY MAIN-SCR.

      * Get initial page by searching the 1st record.
           INITIALIZE  STD-KEY, WS-TEMP,
           SET K-EVENT TO TRUE.
           SET E-SEARCH TO TRUE.
           PERFORM LIST-1-RTN THRU LIST-1-END.
           PERFORM WITH TEST AFTER
                   UNTIL K-ENTER OR K-ESCAPE OR K-L-DBLCLICK
                   ACCEPT MAIN-SCR
           END-PERFORM.

           IF K-ENTER OR K-L-DBLCLICK
              INQUIRE LIST-1, SELECTION-INDEX IN C-SUB
              MODIFY  LIST-1, QUERY-INDEX = C-SUB
              INQUIRE LIST-1, ITEM-VALUE IN WS-REC
              IF WS-STD-KEY NOT = SPACES
                 MOVE WS-STD-KEY TO LINK-STD-KEY
                 MOVE 'Y' TO LINK-OK.

        TERMINATION.
           CLOSE WINDOW S-WINDOW.
           CLOSE STD-FILE, CY-FILE, RC-FILE, RG-FILE.
           EXIT PROGRAM.
           STOP RUN.

      *****************************************************************
        LIST-1-RTN.

           IF NOT K-EVENT GO TO LIST-1-END.

           INQUIRE LIST-1, SELECTION-INDEX IN C-SUB.

           IF NOT (E-UP OR E-PAGEUP OR E-DOWN OR E-PAGEDOWN OR
                   E-SEARCH)
           GO TO LIST-1-END.

           IF E-UP OR E-PAGEUP
              MOVE 1 TO S-SUB
           ELSE
              MOVE T-SIZE TO S-SUB.

      * Get start key.
           INITIALIZE WS-TEMP.
           IF E-SEARCH
              INQUIRE LIST-1, SEARCH-TEXT IN WS-T-STD-KEY
           ELSE
              MODIFY LIST-1, QUERY-INDEX = S-SUB,
              INQUIRE LIST-1, ITEM-VALUE IN WS-TEMP
              IF WS-T-STD-KEY = SPACES
                 GO TO LIST-1-END.

      * Start file
           MOVE WS-T-STD-KEY TO STD-KEY.
           IF E-UP OR E-PAGEUP
              START STD-FILE KEY < STD-KEY INVALID
                    GO TO LIST-1-END
           ELSE
              IF E-SEARCH
                 START STD-FILE KEY >= STD-KEY INVALID
                 GO TO LIST-1-END
               ELSE
                 START STD-FILE KEY > STD-KEY INVALID
                       GO TO LIST-1-END.

      * Determine # of records to get.
           IF E-UP OR E-DOWN
              MOVE 1      TO R-COUNT
           ELSE
              MOVE T-SIZE TO R-COUNT.

      * Get records onto list.
           MODIFY LIST-1, MASS-UPDATE = 1.
           PERFORM GET-REC THRU GET-REC-END
                   VARYING S-SUB FROM 1 BY 1 UNTIL S-SUB > R-COUNT.
           MODIFY LIST-1, MASS-UPDATE = 0.

           MODIFY LIST-1, QUERY-INDEX = C-SUB,
           INQUIRE LIST-1, ITEM-VALUE IN WS-REC.
           DISPLAY MAIN-SCR.

        LIST-1-END. EXIT.

      *****************************************************************
        GET-REC.

           IF E-UP OR E-PAGEUP
              READ STD-FILE PREVIOUS END
                   MOVE R-COUNT TO S-SUB GO TO GET-REC-END
           ELSE
              READ STD-FILE NEXT END
                   MOVE R-COUNT TO S-SUB GO TO GET-REC-END.

      * Clear list if valid search.
           IF (E-SEARCH OR E-PAGEDOWN) AND S-SUB = 1
              MODIFY LIST-1, RESET-LIST = 1.

           INITIALIZE WS-REC.
           MOVE STD-KEY     TO WS-STD-KEY.
           MOVE STD-NAME    TO WS-STD-NAME.
           MOVE STD-CY-KEY  TO WS-STD-CY-KEY.
           MOVE STD-RC-KEY  TO WS-STD-RC-KEY.
           MOVE STD-RG-KEY  TO WS-STD-RG-KEY.
           MOVE STD-DOB-DMY TO WS-STD-DOB-DMY.
           MOVE STD-HEIGHT  TO WS-STD-HEIGHT.
           MOVE STD-WEIGHT  TO WS-STD-WEIGHT.
           MOVE STD-ADD1    TO WS-STD-ADD1.
           MOVE STD-ADD2    TO WS-STD-ADD2.
           MOVE STD-ADD3    TO WS-STD-ADD3.
           MOVE STD-EMAIL   TO WS-STD-EMAIL.
           MOVE STD-MOBILE  TO WS-STD-MOBILE.

      * Calculate Age
           MOVE ZEROS TO WS-STD-AGE.
           IF STD-DOB-DMY NOT = ZEROS
               CALL   '/z/y25b31/sp2/lib/std/f-gtage'
                      USING STD-DOB-DMY, WS-STD-AGE
               CANCEL '/z/y25b31/sp2/lib/std/f-gtage'.

      * Convert Gender BEFORE adding to list
           EVALUATE STD-GENDER
            WHEN 'M' MOVE 'Male'   TO WS-STD-GENDER
            WHEN 'F' MOVE 'Female' TO WS-STD-GENDER
           END-EVALUATE.

           INITIALIZE CY-REC.
           MOVE WS-STD-CY-KEY TO CY-KEY.
           READ CY-FILE INVALID
                INITIALIZE CY-DETAILS.
           MOVE CY-NAME TO WS-STD-CY-NAME.

           INITIALIZE RC-REC.
           MOVE WS-STD-RC-KEY TO RC-KEY.
           READ RC-FILE INVALID
                INITIALIZE RC-DETAILS.
           MOVE RC-NAME TO WS-STD-RC-NAME.

           INITIALIZE RG-REC.
           MOVE STD-RG-KEY TO RG-KEY.
           READ RG-FILE INVALID
                INITIALIZE RG-DETAILS.
           MOVE RG-NAME TO WS-STD-RG-NAME.

      * Insert to top/bottom of the list
           MOVE 1 TO C-SUB.
           IF E-PAGEUP OR E-UP
              MODIFY LIST-1, INSERTION-INDEX = 1, ITEM-TO-ADD = WS-REC
           ELSE
              MODIFY LIST-1, ITEM-TO-ADD = WS-REC
              IF E-DOWN
                 MOVE T-SIZE TO C-SUB.

        GET-REC-END. EXIT.

      *****************************************************************
      *End of program
