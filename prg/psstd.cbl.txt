 IDENTIFICATION DIVISION.
        PROGRAM-ID. PSSTD.

      * PRINT STUDENT FILE, PROCESS
      * AUTHOR    DATE     TYPE    A/C    NOTES
      * MUNA   13/10/2025   -       PA     SP2

       ENVIRONMENT DIVISION.
        INPUT-OUTPUT SECTION.
         FILE-CONTROL.
           COPY '/z/y25b31/sp2/lib/fd/fcstd.t'.
           COPY '/z/y25b31/sp2/lib/fd/fcstd'.

       DATA DIVISION.
        FILE SECTION.
           COPY '/z/y25b31/sp2/lib/fd/fdstd.t'.
           COPY '/z/y25b31/sp2/lib/fd/fdstd'.

        WORKING-STORAGE SECTION.
           COPY '/z/y25b31/sp2/lib/fd/dbstd.t'.
           COPY '/z/y25b31/sp2/lib/fd/dbstd'.
           COPY '/v/cps/lib/std/stdvar.def'.
           COPY '/v/cps/lib/std/fkey.def'.

        01 LINK-PROG-KEY              PIC X(30).

        01 WS-MISC.
           03 WS-AGE                   PIC 9(02).

        LINKAGE SECTION.
        01 LINK-DATA-ID                PIC X(08).
        01 LINK-MISC.
           03 LINK-S-STD-KEY           PIC X(08).
           03 LINK-E-STD-KEY           PIC X(08).
           03 LINK-GENDER              PIC 9(02).
           03 LINK-GENDER2 REDEFINES LINK-GENDER
                                       PIC 9(01) OCCURS 2.
           03 LINK-S-AGE               PIC 9(02).
           03 LINK-E-AGE               PIC 9(02).
           03 LINK-S-CY-KEY            PIC X(04).
           03 LINK-E-CY-KEY            PIC X(04).
           03 LINK-S-RC-KEY            PIC X(04).
           03 LINK-E-RC-KEY            PIC X(04).
           03 LINK-S-RG-KEY            PIC X(04).
           03 LINK-E-RG-KEY            PIC X(04).
        01 LINK-OK                     PIC X(01).

        SCREEN SECTION.
        01 PROCESS-SCR.
           03 LABEL LINE 01 COL 02 'Student ID:'.
           03 LABEL COL + 3 PIC X(06) FROM STD-KEY.

      ******************************************************************
       PROCEDURE DIVISION USING LINK-DATA-ID, LINK-MISC, LINK-OK.

        DECLARATIVES.

           COPY '/z/y25b31/sp2/lib/fd/dcstd.t'.
           COPY '/z/y25b31/sp2/lib/fd/dcstd'.

        END DECLARATIVES.

      ******************************************************************
        BEGIN.

           MOVE 'N'          TO S-RUN, LINK-OK.
           MOVE LINK-DATA-ID TO STD-T-KEY.
           OPEN OUTPUT STD-T-FILE.
           CLOSE STD-T-FILE.

           OPEN I-O STD-T-FILE.
           OPEN INPUT STD-FILE.

           MOVE 30   TO S-SIZE.
           MOVE 03   TO S-LINES.
           MOVE 'PS' TO S-TYPE.
           COPY '/v/cps/lib/std/s-thread.prd'.

           INITIALIZE STD-REC.
           MOVE 'Y'            TO S-RUN.
           MOVE LINK-S-STD-KEY TO STD-KEY.
           START STD-FILE KEY >= STD-KEY INVALID
                 MOVE 'N' TO S-RUN.

           PERFORM 0100-MAIN THRU 0199-END
                   UNTIL S-RUN = 'N' OR THREAD-RETURN = 99.

           IF S-STATUS-CHECK NOT = 'Y' OR THREAD-RETURN NOT = 99
              MOVE 'Y' TO LINK-OK.

           COPY '/v/cps/lib/std/e-thread.prd'.

        TERMINATION.

           CLOSE STD-FILE, STD-T-FILE.
           EXIT PROGRAM.
           STOP RUN.

      *****************************************************************
        0100-MAIN.

           READ STD-FILE NEXT END
                MOVE 'N' TO S-RUN GO TO 0199-END.

      * Check if past end range
           IF STD-KEY > LINK-E-STD-KEY
              MOVE 'N' TO S-RUN
              GO TO 0199-END.

           DISPLAY PROCESS-SCR.

      * Filter by Gender (00=ALL, 10=Male only, 01=Female only, 11=ALL)
           IF LINK-GENDER = 00
              NEXT SENTENCE
           ELSE
              IF STD-GENDER = 'M'
                 IF LINK-GENDER2(1) NOT = 1
                    GO TO 0100-MAIN
                 END-IF
              ELSE
                 IF STD-GENDER = 'F'
                    IF LINK-GENDER2(2) NOT = 1
                       GO TO 0100-MAIN
                    END-IF
                 ELSE
                    GO TO 0100-MAIN
                 END-IF
              END-IF
           END-IF.

      * Calculate and filter by Age
           INITIALIZE WS-AGE.
           CALL   '/z/y25b31/sp2/lib/std/f-gtage' USING
                  STD-DOB-DMY, WS-AGE.
           CANCEL '/z/y25b31/sp2/lib/std/f-gtage'.

           IF WS-AGE < LINK-S-AGE OR WS-AGE > LINK-E-AGE
              GO TO 0100-MAIN.

      * Filter by Country
           IF STD-CY-KEY < LINK-S-CY-KEY OR
              STD-CY-KEY > LINK-E-CY-KEY
              GO TO 0100-MAIN.

      * Filter by Race
           IF STD-RC-KEY < LINK-S-RC-KEY OR
              STD-RC-KEY > LINK-E-RC-KEY
              GO TO 0100-MAIN.

      * Filter by Religion
           IF STD-RG-KEY < LINK-S-RG-KEY OR
              STD-RG-KEY > LINK-E-RG-KEY
              GO TO 0100-MAIN.

      * All filters passed - Write to temporary file
           INITIALIZE STD-T-REC.
           MOVE STD-KEY     TO STD-T-KEY.
           MOVE STD-NAME    TO STD-T-NAME.
           MOVE STD-ADD1    TO STD-T-ADD1.
           MOVE STD-ADD2    TO STD-T-ADD2.
           MOVE STD-ADD3    TO STD-T-ADD3.
           MOVE STD-GENDER  TO STD-T-GENDER.
           MOVE STD-DOB-DMY TO STD-T-DOB-DMY.
           MOVE WS-AGE      TO STD-T-AGE.
           MOVE STD-CY-KEY  TO STD-T-CY-KEY.
           MOVE STD-RC-KEY  TO STD-T-RC-KEY.
           MOVE STD-EMAIL   TO STD-T-EMAIL.
           MOVE STD-MOBILE  TO STD-T-MOBILE.
           MOVE STD-RG-KEY  TO STD-T-RG-KEY.
           MOVE STD-HEIGHT  TO STD-T-HEIGHT.
           MOVE STD-WEIGHT  TO STD-T-WEIGHT.

           WRITE STD-T-REC.

        0199-END. EXIT.

      ******************************************************************
      * End of program
